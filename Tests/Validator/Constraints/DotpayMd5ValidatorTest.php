<?php

namespace Tomasbro\DotpayBundle\Tests\Validator\Constraints;

use Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension;
use Symfony\Component\Form\Forms;
use Symfony\Component\Form\Test\TypeTestCase;
use Symfony\Component\Validator\Validation;
use Tomasbro\DotpayBundle\Form\Type\CallbackFormType;
use Tomasbro\DotpayBundle\Validator\Constraints\DotpayMd5;
use Tomasbro\DotpayBundle\Validator\Constraints\DotpayMd5Validator;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-06 at 22:20:22.
 */
class DotpayMd5ValidatorTest extends TypeTestCase
{

    /**
     * @var DotpayMd5Validator
     */
    protected $validator;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();

        $this->factory = Forms::createFormFactoryBuilder()
            ->addExtensions($this->getExtensions())
            ->addTypeExtension(
                new FormTypeValidatorExtension(
                    Validation::createValidator()
                )
            )
            ->addTypeGuesser(
                $this->getMockBuilder('Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser')
                    ->disableOriginalConstructor()
                    ->getMock()
            )
            ->getFormFactory();

        $dotpayId = '1234';
        $dotpayPin = '6789';
        $this->validator = new DotpayMd5Validator($dotpayId, $dotpayPin);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testIfConstraintAddViolationForIncorrectMd5()
    {
        $formData = array(
            'id' => '1',
            'status' => 'OK',
            'control' => '123',
            't_id' => '1',
            'amount' => '10.00',
            'orginal_amount' => '10.00 PLN',
            'channel' => '1',
            'email' => 'test@email.com',
            'service' => '',
            'code' => '',
            'username' => '',
            'password' => '',
            't_status' => '2',
            'description' => '',
            'md5' => 'somemd5hash',
            'p_info' => '',
            'p_email' => '',
            't_date' => ''
        );

        $type = new CallbackFormType('10.00 PLN');
        $form = $this->factory->create($type);

        // submit the data to the form directly
        $form->submit($formData);
        
        $constraint = new DotpayMd5();
        $context = $this->getMockBuilder('Symfony\Component\Validator\ExecutionContext')
            ->disableOriginalConstructor()
            ->getMock();

        $context->expects($this->once())
            ->method('getRoot')
            ->willReturn($form);
        
        $context->expects($this->once())
            ->method('addViolation')
            ->with(
                $this->equalTo(
                    'Obliczony hash md5 "%calculatedMd5% różni się od otrzymanego w callback "%callbackMd5%"'
                ),
                $this->equalTo(
                    array('%calculatedMd5%' => '3745ba029f5fd97ff0ff3715f6b52d54', '%callbackMd5%' => 'somemd5hash')
                )
            );

        $this->validator->initialize($context);

        $this->validator->validate($formData['md5'], $constraint);
    }
    
    public function testIfConstraintDontAddViolationForCorrectMd5()
    {
        $formData = array(
            'id' => '1',
            'status' => 'OK',
            'control' => '123',
            't_id' => '1',
            'amount' => '10.00',
            'orginal_amount' => '10.00 PLN',
            'channel' => '1',
            'email' => 'test@email.com',
            'service' => '',
            'code' => '',
            'username' => '',
            'password' => '',
            't_status' => '2',
            'description' => '',
            'md5' => '3745ba029f5fd97ff0ff3715f6b52d54',
            'p_info' => '',
            'p_email' => '',
            't_date' => ''
        );

        $type = new CallbackFormType('10.00 PLN');
        $form = $this->factory->create($type);

        // submit the data to the form directly
        $form->submit($formData);
        
        $constraint = new DotpayMd5();
        $context = $this->getMockBuilder('Symfony\Component\Validator\ExecutionContext')
            ->disableOriginalConstructor()
            ->getMock();

        $context->expects($this->once())
            ->method('getRoot')
            ->willReturn($form);
        
        $context->expects($this->never())
            ->method('addViolation')
            ->with(
                $this->equalTo(
                    'Obliczony hash md5 "%calculatedMd5% różni się od otrzymanego w callback "%callbackMd5%"'
                ),
                $this->equalTo(
                    array('%calculatedMd5%' => '3745ba029f5fd97ff0ff3715f6b52d54', '%callbackMd5%' => 'somemd5hash')
                )
            );

        $this->validator->initialize($context);

        $this->validator->validate($formData['md5'], $constraint);
    }
}
